// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Specie {
  DOG
  CAT
  OTHER
}

enum Status {
  ADOPTION
  LOST
  FOUND
}

enum Gender {
  M
  F
  O
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  phone     String?
  role      Role     @default(USER)
  profile   Profile?
  pets      Pet[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  bio       String?
  avatar    String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id          String     @id @default(uuid())
  name        String
  specie      Specie // 'dog' or 'cat'
  gender      Gender // 'M', 'F', 'O'
  status      String // 'adoption', 'lost', 'found'
  description String
  location    String?
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  PetImage    PetImage[] // URLs de las fotos

  @@index([specie])
}

model PetImage {
  id  Int    @id @default(autoincrement())
  url String

  pet   Pet    @relation(fields: [petId], references: [id])
  petId String
}
